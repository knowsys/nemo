/*
 * Generated by cue.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use super::TreeForTableResponse;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TreeForTableResponseChildInformation {
    #[serde(rename = "rule")]
    pub rule: usize,
    #[serde(rename = "children")]
    pub children: Vec<TreeForTableResponse>,
}

impl From<TreeForTableResponseChildInformation>
    for nemo::execution::tracing::tree_query::TreeForTableResponseSuccessor
{
    fn from(value: TreeForTableResponseChildInformation) -> Self {
        Self {
            rule: value.rule,
            children: value.children.into_iter().map(Into::into).collect(),
        }
    }
}

impl From<nemo::execution::tracing::tree_query::TreeForTableResponseSuccessor>
    for TreeForTableResponseChildInformation
{
    fn from(value: nemo::execution::tracing::tree_query::TreeForTableResponseSuccessor) -> Self {
        Self {
            rule: value.rule,
            children: value.children.into_iter().map(Into::into).collect(),
        }
    }
}
