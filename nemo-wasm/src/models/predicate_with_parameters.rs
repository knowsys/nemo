/*
 * Generated by cue.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct PredicateWithParameters {
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "parameters")]
    pub parameters: Vec<String>,
}

impl From<PredicateWithParameters> for nemo::execution::tracing::shared::PredicateWithParameters {
    fn from(value: PredicateWithParameters) -> Self {
        Self {
            name: value.name,
            parameters: value.parameters,
        }
    }
}

impl From<nemo::execution::tracing::shared::PredicateWithParameters> for PredicateWithParameters {
    fn from(value: nemo::execution::tracing::shared::PredicateWithParameters) -> Self {
        Self {
            name: value.name,
            parameters: value.parameters,
        }
    }
}
