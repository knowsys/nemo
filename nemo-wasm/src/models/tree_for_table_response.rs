/*
 * Generated by cue.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TreeForTableResponse {
    #[serde(rename = "childInformation", skip_serializing_if = "Option::is_none")]
    pub child_information: Option<Box<models::TreeForTableResponseChildInformation>>,
    #[serde(rename = "predicate")]
    pub predicate: String,
    #[serde(rename = "tableEntries")]
    pub table_entries: Box<models::TableResponseBaseTableEntries>,
    #[serde(rename = "possibleRulesAbove")]
    pub possible_rules_above: Vec<i32>,
    #[serde(rename = "possibleRulesBelow")]
    pub possible_rules_below: Vec<i32>,
}

impl TreeForTableResponse {
    pub fn new(
        predicate: String,
        table_entries: models::TableResponseBaseTableEntries,
        possible_rules_above: Vec<i32>,
        possible_rules_below: Vec<i32>,
    ) -> TreeForTableResponse {
        TreeForTableResponse {
            child_information: None,
            predicate,
            table_entries: Box::new(table_entries),
            possible_rules_above,
            possible_rules_below,
        }
    }
}
