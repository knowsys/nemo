/*
 * Generated by cue.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TableEntriesForTreeNodesQuery {
    #[serde(rename = "predicate", skip_serializing_if = "Option::is_none")]
    pub predicate: Option<String>,
    #[serde(rename = "childInformation", skip_serializing_if = "Option::is_none")]
    pub child_information: Option<Box<models::InnerTableQueryChildInformation>>,
    #[serde(rename = "tableEntries", skip_serializing_if = "Option::is_none")]
    pub table_entries: Option<Box<models::TableQueryBaseTableEntries>>,
}

impl TableEntriesForTreeNodesQuery {
    pub fn new() -> TableEntriesForTreeNodesQuery {
        TableEntriesForTreeNodesQuery {
            predicate: None,
            child_information: None,
            table_entries: None,
        }
    }
}
