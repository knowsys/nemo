/*
 * Generated by cue.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

use super::{InnerTableQuery, InnerTableQueryChildInformation, TableQueryBaseTableEntries};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TableEntriesForTreeNodesQuery {
    #[serde(rename = "predicate")]
    pub predicate: String,
    #[serde(rename = "childInformation", skip_serializing_if = "Option::is_none")]
    pub child_information: Option<Box<InnerTableQueryChildInformation>>,
    #[serde(rename = "tableEntries", skip_serializing_if = "Option::is_none")]
    pub table_entries: Option<Box<TableQueryBaseTableEntries>>,
}

impl From<TableEntriesForTreeNodesQuery>
    for nemo::execution::tracing::node_query::TableEntriesForTreeNodesQuery
{
    fn from(value: TableEntriesForTreeNodesQuery) -> Self {
        Self {
            predicate: value.predicate,
            inner: InnerTableQuery {
                child_information: value.child_information,
                table_entries: value.table_entries,
            }
            .into(),
        }
    }
}
